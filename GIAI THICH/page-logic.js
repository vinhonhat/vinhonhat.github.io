// ======================================================
// üß© FILE: page-logic.js
// D√πng cho c√°c TRANG CON (vd: rakuten.html, sim.html, hoctap.html)
// Nhi·ªám v·ª•: 
//  - ƒê·ªçc th√¥ng tin t·ª´ th·∫ª <body data-category="...">
//  - L·ªçc b√†i vi·∫øt thu·ªôc chuy√™n m·ª•c ƒë√≥ trong bi·∫øn allContent
//  - Hi·ªÉn th·ªã ra giao di·ªán + ph√¢n trang + g·ª£i √Ω b√†i vi·∫øt
// ======================================================

// üü¢ H√†m ch√≠nh kh·ªüi t·∫°o trang
function initializePage() {
    console.log('[LOGIC] D·ªØ li·ªáu `allContent` ƒë√£ s·∫µn s√†ng. B·∫Øt ƒë·∫ßu hi·ªÉn th·ªã trang.');

    // --- 1Ô∏è‚É£ L·∫•y c√°c ph·∫ßn t·ª≠ HTML c·∫ßn thao t√°c ---
    const elements = {
        body: document.body, // l·∫•y to√†n b·ªô th·∫ª body
        mainContainer: document.getElementById('main-content-container'), // n∆°i hi·ªÉn th·ªã b√†i vi·∫øt ch√≠nh
        suggestionsContainer: document.getElementById('suggested-posts-container'), // c·ªôt ph·∫£i (b√†i vi·∫øt g·ª£i √Ω)
        paginationContainer: document.getElementById('pagination-container'), // khu v·ª±c ph√¢n trang
        pageTitle: document.getElementById('page-title'), // ti√™u ƒë·ªÅ trang (t·ª± l·∫•y t·ª´ data-title)
        pageDescription: document.getElementById('page-description'), // m√¥ t·∫£ ng·∫Øn
    };

    // --- 2Ô∏è‚É£ L·∫•y d·ªØ li·ªáu c·∫•u h√¨nh t·ª´ thu·ªôc t√≠nh data-* trong <body> ---
    const config = {
        title: elements.body.dataset.title || 'Ch·ªß ƒë·ªÅ',
        description: elements.body.dataset.description || 'Danh s√°ch b√†i vi·∫øt.',
        category: elements.body.dataset.category, // v√≠ d·ª•: "rakuten"
        postsPerPage: parseInt(elements.body.dataset.perpage) || 5, // s·ªë b√†i m·ªói trang (vd: 6)
    };

    // N·∫øu thi·∫øu data-category => b√°o l·ªói v√† d·ª´ng
    if (!config.category) {
        console.error('[L·ªñI] Thi·∫øu "data-category" tr√™n th·∫ª <body>.');
        return;
    }

    // --- 3Ô∏è‚É£ L·ªçc danh s√°ch b√†i vi·∫øt theo category t·ª´ allContent ---
    // allContent l√† m·∫£ng ch·ª©a to√†n b·ªô d·ªØ li·ªáu b√†i vi·∫øt (ƒë∆∞·ª£c load t·ª´ content.js)
    const categoryPosts = allContent.filter(post => post.category === config.category);
    let currentPage = 1; // trang hi·ªán t·∫°i

    // ======================================================
    // üü† PH·∫¶N HI·ªÇN TH·ªä N·ªòI DUNG CH√çNH
    // ======================================================
    const renderMainContent = () => {
        elements.mainContainer.innerHTML = ''; // x√≥a n·ªôi dung c≈©
        const totalPosts = categoryPosts.length;

        // N·∫øu ch∆∞a c√≥ b√†i vi·∫øt n√†o
        if (totalPosts === 0) {
            elements.mainContainer.innerHTML = '<p>Ch∆∞a c√≥ b√†i vi·∫øt n√†o trong chuy√™n m·ª•c n√†y.</p>';
            return;
        }

        // T√≠nh to√°n b√†i vi·∫øt b·∫Øt ƒë·∫ßu v√† k·∫øt th√∫c theo trang
        const startIndex = (currentPage - 1) * config.postsPerPage;
        const postsToShow = categoryPosts.slice(startIndex, startIndex + config.postsPerPage);

        // Hi·ªÉn th·ªã t·ª´ng b√†i vi·∫øt
        postsToShow.forEach(post => {
            // ‚úÖ Ki·ªÉm tra ·∫£nh b√†i vi·∫øt
            let imageUrl = post.imageUrl || 'https://placehold.co/400x250/ccc/ffffff?text=No+Image';
            if (imageUrl && !imageUrl.startsWith('http')) {
                imageUrl = "../../" + imageUrl; // n·ªëi th√™m ƒë∆∞·ªùng d·∫´n n·∫øu l√† ·∫£nh n·ªôi b·ªô
            }

            // ‚úÖ C√°c th√¥ng tin b√†i vi·∫øt
            const summary = post.summary || 'Kh√¥ng c√≥ m√¥ t·∫£.';
            const postDate = post.date || '';

            // ‚úÖ X·ª≠ l√Ω link b√†i vi·∫øt (ƒë·∫£m b·∫£o h·ª£p l·ªá)
            let postLink = post.link || '#';
            if (postLink && !postLink.startsWith('http') && !postLink.startsWith('../') && !postLink.startsWith('../../')) {
                postLink = "../../" + postLink;
            }

            // ‚úÖ Giao di·ªán hi·ªÉn th·ªã
            elements.mainContainer.innerHTML += `
                <!-- Card view cho PC/Tablet -->
                <div class="hidden sm:flex flex-col bg-white rounded-lg shadow-lg overflow-hidden transform transition-transform duration-300 hover:scale-105 hover:shadow-xl">
                    <a href="${postLink}" class="block">
                        <img src="${imageUrl}" alt="${post.title}" class="w-full h-48 object-cover">
                    </a>
                    <div class="p-6 flex flex-col flex-grow">
                        <h3 class="text-xl font-bold text-gray-800 mb-2">
                            <a href="${postLink}" class="hover:text-yellow-600">${post.title}</a>
                        </h3>
                        <p class="text-gray-600 text-sm flex-grow">${summary}</p>
                        <div class="mt-4 flex items-center text-gray-500 text-sm">
                            <i class="far fa-calendar-alt mr-2"></i>
                            <span>${postDate}</span>
                        </div>
                        <div class="mt-4 text-right">
                            <a href="${postLink}" class="text-yellow-600 hover:underline font-semibold">Xem chi ti·∫øt &rarr;</a>
                        </div>
                    </div>
                </div>

                <!-- List view cho mobile -->
                <a href="${postLink}" class="block sm:hidden flex items-start space-x-4 p-4 bg-white rounded-lg shadow-md transition-shadow duration-300 hover:shadow-lg">
                    <img src="${imageUrl}" alt="${post.title}" class="w-24 h-24 rounded-lg object-cover flex-shrink-0">
                    <div class="flex-1">
                        <h3 class="font-bold text-lg text-gray-800 group-hover:text-yellow-600">${post.title}</h3>
                        <p class="text-gray-600 text-sm mt-1 truncate-2-lines">${summary}</p>
                        <div class="text-xs text-gray-500 mt-2 flex items-center">
                            <i class="far fa-calendar-alt mr-2"></i>
                            <span>${postDate}</span>
                        </div>
                    </div>
                </a>
            `;
        });

        // Sau khi render xong => g·ªçi h√†m t·∫°o n√∫t ph√¢n trang
        renderPagination(totalPosts);
    };

    // ======================================================
    // üîµ PH√ÇN TRANG
    // ======================================================
    const renderPagination = (totalPosts) => {
        elements.paginationContainer.innerHTML = '';
        const totalPages = Math.ceil(totalPosts / config.postsPerPage);
        if (totalPages <= 1) return; // n·∫øu ch·ªâ c√≥ 1 trang th√¨ kh√¥ng c·∫ßn n√∫t

        // H√†m t·∫°o n√∫t b·∫•m
        const createButton = (text, page, isDisabled = false) => {
            const btn = document.createElement('button');
            btn.innerHTML = text;
            btn.className = `pagination-btn ${page === currentPage ? 'active' : ''}`;
            btn.disabled = isDisabled;
            btn.onclick = () => { 
                currentPage = page; 
                renderMainContent(); // v·∫Ω l·∫°i n·ªôi dung khi chuy·ªÉn trang
            };
            return btn;
        };

        // Th√™m c√°c n√∫t << Tr∆∞·ªõc - S·ªë trang - Sau >>
        elements.paginationContainer.appendChild(createButton('&laquo; Tr∆∞·ªõc', currentPage - 1, currentPage === 1));
        for (let i = 1; i <= totalPages; i++) {
            elements.paginationContainer.appendChild(createButton(i, i));
        }
        elements.paginationContainer.appendChild(createButton('Sau &raquo;', currentPage + 1, currentPage === totalPages));
    };

    // ======================================================
    // üü£ PH·∫¶N G·ª¢I √ù B√ÄI VI·∫æT (RANDOM TRONG 6 TH√ÅNG G·∫¶N NH·∫§T)
    // ======================================================
    const renderSuggestions = () => {
        elements.suggestionsContainer.innerHTML = '';

        // L·∫•y ng√†y 6 th√°ng tr∆∞·ªõc ƒë·ªÉ l·ªçc b√†i m·ªõi
        const sixMonthsAgo = new Date();
        sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6);

        const recentPosts = allContent.filter(post => {
            if (!post.date) return false;
            const postDate = new Date(post.date);
            return postDate >= sixMonthsAgo;
        });

        if (recentPosts.length === 0) return;

        // X√°o tr·ªôn ng·∫´u nhi√™n danh s√°ch b√†i
        const shuffled = recentPosts.sort(() => 0.5 - Math.random());

        // Gi·ªõi h·∫°n s·ªë l∆∞·ª£ng g·ª£i √Ω t√πy theo thi·∫øt b·ªã
        const isMobile = window.innerWidth < 640;
        const maxSuggestions = isMobile ? 4 : 6;

        const suggestions = shuffled.slice(0, maxSuggestions);

        // T·∫°o th·∫ª HTML cho t·ª´ng b√†i vi·∫øt g·ª£i √Ω
        suggestions.forEach(post => {
            let imageUrl = post.imageUrl || 'https://placehold.co/64x64/ccc/ffffff?text=...';
            if (imageUrl && !imageUrl.startsWith('http')) {
                imageUrl = "../../" + imageUrl;
            }

            let postLink = post.link || '#';
            if (postLink && !postLink.startsWith('http') && !postLink.startsWith('../') && !postLink.startsWith('../../')) {
                postLink = "../../" + postLink;
            }

            // HTML g·ª£i √Ω cho PC v√† Mobile
            elements.suggestionsContainer.innerHTML += `
            <!-- PC/iPad -->
            <a href="${postLink}" class="hidden sm:flex items-center p-2 rounded-lg hover:bg-yellow-100 transition-colors duration-200 group mb-4">
                <img src="${imageUrl}" alt="${post.title}" class="w-16 h-16 object-cover rounded-md flex-shrink-0">
                <div class="ml-4">
                    <h4 class="font-semibold text-gray-800 group-hover:text-yellow-700">${post.title}</h4>
                    <div class="text-xs text-gray-500 mt-1 flex items-center">
                        <i class="far fa-calendar-alt mr-1"></i>
                        <span>${post.date || ''}</span>
                    </div>
                </div>
            </a>

            <!-- Mobile -->
            <a href="${postLink}" class="block sm:hidden p-2 rounded-lg hover:bg-yellow-100 transition-colors duration-200 group mb-4 text-center">
                <img src="${imageUrl}" alt="${post.title}" class="w-16 h-16 object-cover rounded-md mx-auto mb-2">
                <h4 class="font-semibold text-gray-800 group-hover:text-yellow-700 truncate-2-lines">${post.title}</h4>
                <div class="text-xs text-gray-500 mt-1 flex justify-center items-center">
                    <i class="far fa-calendar-alt mr-1"></i>
                    <span>${post.date || ''}</span>
                </div>
            </a>`;
        });
    };

    // ======================================================
    // üî∏ CU·ªêI C√ôNG: G√ÅN TI√äU ƒê·ªÄ & CH·∫†Y TO√ÄN B·ªò
    // ======================================================
    elements.pageTitle.textContent = config.title;
    elements.pageDescription.textContent = config.description;
    renderMainContent();
    renderSuggestions();
}

// ======================================================
// ‚è≥ H√ÄM CH·ªú D·ªÆ LI·ªÜU "allContent" T·ª™ content.js R·ªíI M·ªöI CH·∫†Y
// (V√¨ file JS n√†y ch·∫°y sau, n√™n c·∫ßn ƒë·ª£i d·ªØ li·ªáu load xong)
// ======================================================
function waitForDataAndRun() {
    let attempts = 0;
    const maxAttempts = 100; // t∆∞∆°ng ƒë∆∞∆°ng 5 gi√¢y (100 √ó 50ms)

    const checker = setInterval(() => {
        if (typeof allContent !== 'undefined' && allContent.length > 0) {
            clearInterval(checker);
            initializePage(); // d·ªØ li·ªáu ƒë√£ s·∫µn s√†ng, kh·ªüi ch·∫°y trang
        }

        attempts++;
        if (attempts > maxAttempts) {
            clearInterval(checker);
            console.error('[L·ªñI] ƒê√£ ch·ªù qu√° 5 gi√¢y nh∆∞ng kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu "allContent".');
            const mainContainer = document.getElementById('main-content-container');
            if (mainContainer) 
                mainContainer.innerHTML = '<p>L·ªói: Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu b√†i vi·∫øt do ch·ªù qu√° l√¢u.</p>';
        }
    }, 50);
}

// G·ªçi h√†m ch·ªù d·ªØ li·ªáu
waitForDataAndRun();
